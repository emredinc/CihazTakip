// <auto-generated />
using CihazTakip.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CihazTakip.Persistence.Migrations
{
    [DbContext(typeof(CihazTakipContext))]
    [Migration("20220312164853_cihazTakip1")]
    partial class cihazTakip1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CihazTakip.Core.Entity.BrandModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .HasColumnType("varchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("BrandModel");
                });

            modelBuilder.Entity("CihazTakip.Core.Entity.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .HasColumnType("varchar(500)");

                    b.HasKey("Id");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("CihazTakip.Core.Entity.ProductBrand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .HasColumnType("varchar(500)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductBrand");
                });

            modelBuilder.Entity("CihazTakip.Core.Entity.BrandModel", b =>
                {
                    b.HasOne("CihazTakip.Core.Entity.ProductBrand", "ProductBrand")
                        .WithMany("BrandModels")
                        .HasForeignKey("BrandId")
                        .IsRequired();
                });

            modelBuilder.Entity("CihazTakip.Core.Entity.ProductBrand", b =>
                {
                    b.HasOne("CihazTakip.Core.Entity.Product", "Product")
                        .WithMany("ProductBrands")
                        .HasForeignKey("ProductId")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
